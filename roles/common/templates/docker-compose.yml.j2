version: "3.8"

networks:
  arr:
  proxy:

services:
  samba:
    image: dperson/samba
    container_name: samba
    restart: always
    command: |
      {% for user in SAMBA -%}
      -u "{{ user.USER }};{{ user.PASS }}"
      -s "{{ user.USER }};/{{ user.USER }};yes;no"
      {% endfor -%}
      -s "media;/media;yes;no"
      -s "torrents;/torrents;yes;no"
      -s "backup;/backup;yes;no"
      -s "timemachine;/timemachine;yes;no"
    stdin_open: true
    tty: true
    environment:
      - TZ={{ TIMEZONE }}
    ports:
      - 139:139
      - 445:445
    volumes:
      - {{ STORAGE }}/shared/media:/media
      - {{ STORAGE }}/shared/torrents:/torrents
      - {{ BACKUP }}:/backup
      - {{ TIMEMACHINE }}:/timemachine
      {% for user in SAMBA -%}
      - {{ STORAGE }}/files/{{ user.USER }}:/{{ user.USER }}
      {% endfor %}

  plex:
    image: jaymoulin/plex:latest
    container_name: plex
    hostname: plex
    restart: unless-stopped
    network_mode: host
    environment:
      - PUID={{ PUID }}
      - PGID={{ PGID }}
      - VERSION=docker
      - TZ={{ TIMEZONE }}
    volumes:
      - {{ STORAGE }}/docker/Plex Media Server:/root/Library/Application Support/Plex Media Server
      - {{ STORAGE }}/shared/media:/shared/media

  tautulli:
    image: lscr.io/linuxserver/tautulli:latest
    container_name: tautulli
    environment:
      - PUID={{ PUID }}
      - PGID={{ PGID }}
      - TZ={{ TIMEZONE }}
      - UMASK_SET=022
    volumes:
      - {{ STORAGE }}/docker/tautulli:/config
    ports:
      - 8181:8181
    restart: unless-stopped

  transmission:
    image: lscr.io/linuxserver/transmission:latest
    container_name: transmission
    networks:
      - arr
    environment:
      - PUID={{ PUID }}
      - PGID={{ PGID }}
      - TZ={{ TIMEZONE }}
      - UMASK_SET=022
    volumes:
      - {{ STORAGE }}/docker/transmission:/config
      - {{ STORAGE }}/shared/torrents:/shared/torrents
    ports:
      - 9091:9091
      - 51413:51413
      - 51413:51413/udp
    restart: unless-stopped
    
  overseerr:
    image: lscr.io/linuxserver/overseerr:latest
    container_name: overseerr
    network_mode: service:ts-overseerr
    environment:
      - PUID={{ PUID }}
      - PGID={{ PGID }}
      - TZ={{ TIMEZONE }}
    volumes:
      - {{ STORAGE }}/docker/overseerr:/config
    restart: unless-stopped
    depends_on: 
      - ts-overseerr

  ts-overseerr:
    image: tailscale/tailscale:latest
    container_name: ts-overseerr
    hostname: ts-overseerr
    environment:
      - TS_AUTHKEY={{ TAILSCALE_AUTHKEY }}?ephemeral=false
      - TS_STATE_DIR=/var/lib/tailscale
      - TS_EXTRA_ARGS=--advertise-tags=tag:container
    volumes:
      - {{ STORAGE }}/docker/ts-overseerr/state:/var/lib/tailscale
      - {{ STORAGE }}/docker/ts-overseerr/config:/config
      - /dev/net/tun:/dev/net/tun
    cap_add:
      - net_admin
      - sys_module
    restart: unless-stopped

  radarr:
    image: lscr.io/linuxserver/radarr:latest
    container_name: radarr
    networks:
      - arr
    environment:
      - PUID={{ PUID }}
      - PGID={{ PGID }}
      - TZ={{ TIMEZONE }}
      - UMASK_SET=022
    volumes:
      - {{ STORAGE }}/docker/radarr:/config
      - {{ STORAGE }}/shared:/shared
    ports:
      - 7878:7878
    restart: unless-stopped

  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    container_name: sonarr
    networks:
      - arr
    environment:
      - PUID={{ PUID }}
      - PGID={{ PGID }}
      - TZ={{ TIMEZONE }}
      - UMASK_SET=022
    volumes:
      - {{ STORAGE }}/docker/sonarr:/config
      - {{ STORAGE }}/shared:/shared
    ports:
      - 8989:8989
    restart: unless-stopped

  prowlarr:
    image: lscr.io/linuxserver/prowlarr:latest
    container_name: prowlarr
    networks:
      - arr
    environment:
      - PUID={{ PUID }}
      - PGID={{ PGID }}
      - TZ={{ TIMEZONE }}
    volumes:
      - {{ STORAGE }}/docker/prowlarr:/config
    ports:
      - 9696:9696
    restart: unless-stopped

  flaresolverr:
    image: ghcr.io/flaresolverr/flaresolverr:latest
    container_name: flaresolverr
    networks:
      - arr
    environment:
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - LOG_HTML=${LOG_HTML:-false}
      - CAPTCHA_SOLVER=${CAPTCHA_SOLVER:-none}
      - TZ={{ TIMEZONE }}
    ports:
      - "${PORT:-8191}:8191"
    restart: unless-stopped
  
  pihole:
    container_name: pihole
    image: pihole/pihole:latest
    ports:
      - "53:53/tcp"
      - "53:53/udp"
      - "67:67/udp"
      - "8080:80/tcp"
    environment:
      - TZ={{ TIMEZONE }}
      - WEBPASSWORD={{ PIHOLE_WEB_PASS }}
      - DNSMASQ_LISTENING=all
      - WEBTHEME=default-dark
    volumes:
      - '{{ STORAGE }}/docker/pihole/etc-pihole/:/etc/pihole/'
      - '{{ STORAGE }}/docker/pihole/etc-dnsmasq.d/:/etc/dnsmasq.d/'
    cap_add:
      - NET_ADMIN
    restart: unless-stopped
  
  watchtower:
    container_name: watchtower
    image: containrrr/watchtower:latest
    ports:
      - 8282:8080
    environment:
      - WATCHTOWER_CLEANUP=true
      - WATCHTOWER_INCLUDE_RESTARTING=true
      - WATCHTOWER_INCLUDE_STOPPED=true
      - WATCHTOWER_REVIVE_STOPPED=false
      - WATCHTOWER_NO_RESTART=false
      - WATCHTOWER_TIMEOUT=30s
      - WATCHTOWER_SCHEDULE=0 0 4 * * 6
      - WATCHTOWER_DEBUG=false
      - WATCHTOWER_NOTIFICATION_URL=telegram://{{TELEGRAM.TOKEN}}@telegram/?channels={{TELEGRAM.CHAT_ID}}
      - TZ={{ TIMEZONE }}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    restart: unless-stopped

  kopia:
    image: kopia/kopia:latest
    hostname: kopia
    container_name: kopia
    ports:
        - 51515:51515
    command:
        - server
        - start
        - --disable-csrf-token-checks
        - --insecure
        - --enable-actions
        - --address=0.0.0.0:51515
        - --server-username={{CONTAINER_USER}}
        - --server-password={{KOPIA_UI_PASS}}
    environment:
        TZ: {{ TIMEZONE }}
        USER: {{ CONTAINER_USER }}
        KOPIA_PASSWORD: {{ KOPIA_REPO_PASS }}
        KOPIA_PERSIST_CREDENTIALS_ON_CONNECT: "true"
    volumes:
        - {{ STORAGE }}/docker/kopia/config:/app/config
        - {{ STORAGE }}/docker/kopia/cache:/app/cache
        - {{ STORAGE }}/docker/kopia/logs:/app/logs
        - {{ STORAGE }}/docker:/data/docker:ro
        - {{ STORAGE }}/files:/data/files:ro
        - {{ BACKUP }}/kopia:/backups:shared
        - {{ USER_PATH }}/scripts:/scripts:ro
    restart: unless-stopped

  tailscale:
    image: tailscale/tailscale:latest
    container_name: tailscale
    hostname: tailscale
    networks:
      - proxy
    environment:
      - TS_AUTHKEY={{ TAILSCALE_AUTHKEY }}?ephemeral=false
      - TS_STATE_DIR=/var/lib/tailscale
      - TS_EXTRA_ARGS=--advertise-tags=tag:container
    volumes:
      - {{ STORAGE }}/docker/tailscale/state:/var/lib/tailscale
      - {{ STORAGE }}/docker/tailscale/config:/config
      - /dev/net/tun:/dev/net/tun
    cap_add:
      - net_admin
      - sys_module
    restart: unless-stopped
  
  caddy:
    image: serfriz/caddy-cloudflare:latest
    container_name: caddy
    network_mode: service:tailscale
    depends_on:
      - tailscale
    environment:
      - CLOUDFLARE_TOKEN={{ CLOUDFLARE_API_TOKEN }}
      - DNS_DOMAIN={{ DNS_DOMAIN }}
      - HOST_IP={{ HOST_IP }}
    volumes:
      - {{ STORAGE }}/docker/caddy/Caddyfile:/etc/caddy/Caddyfile
      - {{ STORAGE }}/docker/caddy/site:/srv
      - {{ STORAGE }}/docker/caddy/data:/data
      - {{ STORAGE }}/docker/caddy/config:/config
    cap_add:
      - NET_ADMIN
    restart: unless-stopped